{"version":3,"sources":["components/formInput/FormChart.js","components/formInput/NewChart.js","components/formInput/DisplayTabel.js","components/DropDown/ChatFilter.js","components/Chart/ChartDisplay.js","components/formInput/DisplayAllData.js","App.js","index.js"],"names":["FormChart","onDataGet","onCancel","useState","title","amount","date","userDetails","setUserDetails","changeHandler","event","target","name","value","onSubmit","preventDefault","formData","Date","document","myForm","reset","style","marginTop","marginBottom","align","cellSpacing","cellPadding","type","onChange","required","min","max","colSpan","Button","marginRight","color","onClick","NewChart","getDatas","isAdd","setIsAdd","formDataValues","id","Math","random","toString","DisplayTabel","onPassData","Table","border","map","data","getDate","getMonth","getFullYear","ChatFilter","onChartFilter","ChartDisplay","onDataValue","onSelectedChart","console","log","Labels","val","dataValue","BgColor","push","floor","ChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","plugins","legend","display","position","text","padding","top","bottom","scales","x","grid","tickColor","y","suggestedMin","suggestedMax","selectedChart","paddingTop","width","height","DisplayAllData","selectChartValue","setselectChartValue","length","Container","Row","xs","Col","selectedChartData","App","uData","setUData","className","dataIsGet","prevData","ReactDOM","render","StrictMode","getElementById"],"mappings":"mNAoGeA,EAjGG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EACPC,mBAAS,CAC7CC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAJqC,mBACtCC,EADsC,KACzBC,EADyB,KAOvCC,EAAgB,SAACC,GAErBF,EAAe,2BACVD,GADS,kBAEXG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAetC,OACE,8BACE,uBACEC,SAdgB,SAACJ,GACrBA,EAAMK,iBACN,IAAMC,EAAW,CACfZ,MAAOG,EAAYH,MACnBC,OAAQE,EAAYF,OACpBC,KAAM,IAAIW,KAAKV,EAAYD,OAE7BL,EAAUe,GACVE,SAASC,OAAOC,SAOZC,MAAO,CAAEC,UAAW,OAAQC,aAAc,QAC1CX,KAAK,SAHP,UAKE,qDACA,uBAAOY,MAAM,SAASC,YAAY,KAAKC,YAAY,KAAnD,SACE,kCACE,+BACE,sDACA,6BACE,uBACEC,KAAK,OACLf,KAAK,QACLgB,SAAUnB,EACVoB,UAAQ,SAId,+BACE,uDACA,6BACE,uBACEF,KAAK,SACLf,KAAK,SACLgB,SAAUnB,EACVoB,UAAQ,SAId,+BACE,qDACA,6BACE,uBACEF,KAAK,OACLf,KAAK,OACLkB,IAAI,aACJC,IAAI,aACJH,SAAUnB,EACVoB,UAAQ,SAId,6BACE,qBAAIG,QAAS,EAAGR,MAAO,SAAvB,UACE,cAACS,EAAA,EAAD,CACEN,KAAK,SACLN,MAAO,CACLC,UAAW,OACXC,aAAc,OACdW,YAAa,QAEfC,MAAM,UACNC,QAASlC,EARX,oBAYA,cAAC+B,EAAA,EAAD,CAAQE,MAAM,UAAUR,KAAK,SAA7B,oCC/DDU,EArBE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACHnC,oBAAS,GADN,mBACtBoC,EADsB,KACfC,EADe,KAY7B,OACI,iCACMD,GAAU,cAACN,EAAA,EAAD,CAAQE,MAAM,UAAUd,MAAO,CAACC,UAAW,OAAQC,aAAc,QAASa,QAAS,kBAAKI,GAAS,IAAjG,0BAEXD,GAAU,cAAC,EAAD,CAAWtC,UAbL,SAACe,GACtB,IAAMyB,EAAe,aACjBC,GAAIC,KAAKC,SAASC,YACf7B,GAEPsB,EAASG,GACTD,GAAS,IAO8CtC,SAAU,kBAAKsC,GAAS,U,SCOxEM,EAzBM,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACnB,OACQ,eAACC,EAAA,EAAD,CAAOC,OAAQ,EAAGzB,MAAM,SAAxB,UACI,gCACI,+BACI,uCACA,wCACA,2CAGR,gCACKuB,EAAWG,KAAI,SAACC,GACb,OACI,+BACI,6BAAKA,EAAK/C,QACV,6BAAK+C,EAAK9C,SACV,uCAAQ8C,EAAK7C,KAAK8C,UAAlB,YAA+BD,EAAK7C,KAAK+C,WAAa,EAAtD,YAA2DF,EAAK7C,KAAKgD,mBAHhEH,EAAKT,aCA3Ba,EAbI,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAIjB,OACQ,yBAAQ5B,SAJM,SAAClB,GACnB8C,EAAc9C,IAGV,UACI,wBAAQG,MAAM,GAAd,0BACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,WAAd,2B,QC6ED4C,EApFM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBACjCC,QAAQC,IAAIF,GACd,IAAMG,EAASJ,EAAYR,KAAI,SAACa,GAAD,OAASA,EAAI3D,SACtC4D,EAAYN,EAAYR,KAAI,SAACa,GAAD,OAASA,EAAI1D,UAE/CuD,QAAQC,IAAIG,GAEZ,IAAIC,EAAU,GASdD,EAAUd,KAAI,kBAAMe,EAAQC,KAHnB,OAHCvB,KAAKwB,MAAsB,IAAhBxB,KAAKC,UAGJ,IAFZD,KAAKwB,MAAsB,IAAhBxB,KAAKC,UAEM,IADtBD,KAAKwB,MAAsB,IAAhBxB,KAAKC,UACgB,QAK1C,IAAMwB,EAAY,CAChBC,OAAQP,EACRQ,SAAU,CACR,CACEC,MAAO,cACPpB,KAAMa,EACNQ,gBAAiBP,EACjBQ,YAAa,gBACbC,YAAa,KAKbC,EAAU,CACdC,qBAAqB,EACrBC,QAAS,CACPC,OAAQ,CACNC,SAAS,EACTC,SAAU,OAGZ5E,MAAO,CACL2E,SAAS,EACTE,KAAM,gBACNC,QAAS,CACPC,IAAK,GACLC,OAAQ,MAIdC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJpD,MAAO,MACPsC,YAAa,OACbe,UAAW,SAGfC,EAAG,CACDC,aAAc,EACdC,aAAc,OAIhBC,EAAgB,kDAQpB,OAPIjC,IACsB,aAApBA,EACFiC,EAAgB,cAAC,IAAD,CAAKzC,KAAMiB,EAAWO,QAASA,IAClB,aAApBhB,IACTiC,EAAgB,cAAC,IAAD,CAAKjB,QAASA,EAASxB,KAAMiB,MAI/C,qBACE/C,MAAO,CACLwE,WAAY,OACZC,MAAO,MACPC,OAAQ,QACRhB,QAAS,eALb,SAQGa,K,2BCvDQI,EArBQ,SAAC,GAAkB,IAAjBjD,EAAgB,EAAhBA,WAAgB,EACU5C,mBAAS,IADnB,mBAC9B8F,EAD8B,KACbC,EADa,KAErC,OAAyB,IAAtBnD,EAAWoD,OACH,mDAGP,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,UAAK,cAAC,EAAD,CAAcxD,WAAYA,QAEnC,cAACsD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC,EAAD,CAAY9C,cAAe,SAACgD,GAAqBN,EAAoBM,EAAkB7F,OAAOE,YAElG,cAACwF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC,EAAD,CAAc5C,YAAaX,EAAYY,gBAAiBsC,UCGzDQ,EAnBH,WAAO,IAAD,EACUtG,mBAAS,IADnB,mBACTuG,EADS,KACFC,EADE,KAWhB,OAFA/C,QAAQC,IAAI6C,GAGV,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,CAAUtE,SAVY,SAACuE,GACzBF,GAAS,SAACG,GACR,MAAM,GAAN,mBAAYA,GAAZ,CAAsBD,UAStB,cAAC,EAAD,CAAgB9D,WAAY2D,Q,OCZlCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/F,SAASgG,eAAe,U","file":"static/js/main.6084399e.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Button } from \"reactstrap\";\n\nconst FormChart = ({ onDataGet, onCancel }) => {\n  const [userDetails, setUserDetails] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\",\n  });\n\n  const changeHandler = (event) => {\n    // console.log(event.target.name);\n    setUserDetails({\n      ...userDetails,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const formData = {\n      title: userDetails.title,\n      amount: userDetails.amount,\n      date: new Date(userDetails.date),\n    };\n    onDataGet(formData);\n    document.myForm.reset();\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={submitHandler}\n        style={{ marginTop: \"50px\", marginBottom: \"50px\" }}\n        name=\"myForm\"\n      >\n        <h1>Product Information</h1>\n        <table align=\"center\" cellSpacing=\"20\" cellPadding=\"10\">\n          <tbody>\n            <tr>\n              <td>Enter Product Title:</td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  onChange={changeHandler}\n                  required\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Enter Product Amount:</td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"amount\"\n                  onChange={changeHandler}\n                  required\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Enter Product Date:</td>\n              <td>\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  min=\"2015-01-01\"\n                  max=\"2020-12-31\"\n                  onChange={changeHandler}\n                  required\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2} align={\"center\"}>\n                <Button\n                  type=\"button\"\n                  style={{\n                    marginTop: \"50px\",\n                    marginBottom: \"50px\",\n                    marginRight: \"30px\",\n                  }}\n                  color=\"primary\"\n                  onClick={onCancel}\n                >\n                  Cancel\n                </Button>\n                <Button color=\"success\" type=\"submit\">\n                  Submit\n                </Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n};\n\nexport default FormChart;\n","import React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport FormChart from \"./FormChart\";\n\nconst NewChart = ({getDatas}) => {\n    const [isAdd, setIsAdd] = useState(false);\n\n    const onDataGetHandler = (formData)=>{\n        const formDataValues={\n            id: Math.random().toString(),\n            ...formData,\n        }\n        getDatas(formDataValues);\n        setIsAdd(false);\n    }\n\n    return (\n        <div>\n            {!isAdd && (<Button color='primary' style={{marginTop: '50px', marginBottom: '50px'}} onClick={()=> setIsAdd(true)}>Add New Data</Button>)}\n\n            {isAdd && (<FormChart onDataGet={onDataGetHandler} onCancel={()=> setIsAdd(false)} />)}\n        </div>\n    )\n}\n\nexport default NewChart;","import React from 'react';\nimport { Table } from 'reactstrap';\nconst DisplayTabel = ({onPassData}) => {\n    return (\n            <Table border={1} align='center'>\n                <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Amount</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {onPassData.map((data)=>{\n                        return(\n                            <tr key={data.id}> \n                                <td>{data.title}</td>\n                                <td>{data.amount}</td>\n                                <td>{`${data.date.getDate()}-${data.date.getMonth() + 1}-${data.date.getFullYear()}`}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n    )\n}\n\nexport default DisplayTabel;\n","import React from 'react'\n\nconst ChatFilter = ({onChartFilter}) => {\n    const changeHandler = (event)=>{\n        onChartFilter(event);\n    }\n    return (\n            <select onChange={changeHandler}>\n                <option value=''>Select Value</option>\n                <option value='BarChart'>Bar Chart</option>\n                <option value='PieChart'>Pie Chart</option>\n            </select>\n    )\n}\n\nexport default ChatFilter;\n","import React from \"react\";\nimport { Bar, Pie } from \"react-chartjs-2\";\n\nconst ChartDisplay = ({ onDataValue, onSelectedChart }) => {\n    console.log(onSelectedChart);\n  const Labels = onDataValue.map((val) => val.title);\n  const dataValue = onDataValue.map((val) => val.amount);\n\n  console.log(dataValue);\n\n  let BgColor = [];\n\n  const dynamicColor = () => {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  };\n\n  dataValue.map(() => BgColor.push(dynamicColor()));\n\n  const ChartData = {\n    labels: Labels,\n    datasets: [\n      {\n        label: \"User Salary\",\n        data: dataValue,\n        backgroundColor: BgColor,\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\",\n      },\n\n      title: {\n        display: true,\n        text: \"Chart exaple \",\n        padding: {\n          top: 10,\n          bottom: 20,\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          color: \"red\",\n          borderColor: \"grey\",\n          tickColor: \"grey\",\n        },\n      },\n      y: {\n        suggestedMin: 0,\n        suggestedMax: 500,\n      },\n    },\n  };\n  let selectedChart = <p>No chart Selected</p>;\n  if (onSelectedChart) {\n    if (onSelectedChart === \"BarChart\") {\n      selectedChart = <Bar data={ChartData} options={options}></Bar>;\n    } else if (onSelectedChart === \"PieChart\") {\n      selectedChart = <Pie options={options} data={ChartData}></Pie>;\n    }\n  }\n  return (\n    <div\n      style={{\n        paddingTop: \"40px\",\n        width: \"50%\",\n        height: \"400px\",\n        display: \"inline-flex\",\n      }}\n    >\n      {selectedChart}\n    </div>\n  );\n};\n\nexport default ChartDisplay;\n","import React, { useState } from 'react';\nimport DisplayTabel from './DisplayTabel';\nimport ChatFilter from '../DropDown/ChatFilter';\nimport ChartDisplay from '../Chart/ChartDisplay';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst DisplayAllData = ({onPassData}) => {\n    const [selectChartValue,setselectChartValue] = useState('');\n    if(onPassData.length === 0){\n        return <h2>Please Enter Data</h2>\n    }\n    return (\n        <Container>\n            <Row xs=\"1\">\n                <Col><DisplayTabel onPassData={onPassData} /></Col>\n            </Row>\n            <Row xs=\"3\">\n                <ChatFilter onChartFilter={(selectedChartData)=>{setselectChartValue(selectedChartData.target.value)}}/>\n            </Row>\n            <Row xs=\"1\">\n                <ChartDisplay onDataValue={onPassData} onSelectedChart={selectChartValue} />\n            </Row>\n         </Container>\n       \n    )\n}\n\nexport default DisplayAllData;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewChart from \"./components/formInput/NewChart\";\nimport DisplayAllData from \"./components/formInput/DisplayAllData\";\nconst App = () => {\n  const [uData, setUData] = useState([]);\n\n  const onGetDatasHandler = (dataIsGet) => {\n    setUData((prevData) => {\n      return [ ...prevData, dataIsGet];\n    });\n  };\n\n  console.log(uData);\n\n  return (\n    <div className=\"App\">\n      <NewChart getDatas={onGetDatasHandler} />\n      <DisplayAllData onPassData={uData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}